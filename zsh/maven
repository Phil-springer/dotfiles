# Maven toys

alias mci='mvn clean install'
alias mcint='mvn clean install -DskipTests -Dmaven.test.skip=true'

export MAVEN_OPTS="-Xmx1536m -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC"

export MAVEN=/usr/local/bin/mvn

function mvn {
    if [[ ! -x $MAVEN ]]; then
        echo "Cannot find Maven at $MAVEN"
        return 1
    else
        colour_maven "$@"
        MVN_EXIT=$?
        if [[ -n $(which terminal-notifier 2>/dev/null) ]]; then
            if [[ $MVN_EXIT == 0 ]]; then
                terminal-notifier -title Maven -message "Maven build successful at $(date)"
            else
                terminal-notifier -title Maven -message "Maven build failed at $(date)"
            fi
        fi
        return $MVN_EXIT
    fi
}

# Maven colour - taken from https://gist.github.com/1881211, modified for zshrc/our env

xterm_color() {
    c_bold=`tput setaf 0`
    c_bg_bold=`tput setab 0`
    c_black=`tput setab 0`
    c_bg_black=`tput setab 0`
    c_cyan=`tput setaf 6`
    c_bg_cyan=`tput setab 6`
    c_magenta=`tput setaf 5`
    c_bg_magenta=`tput setab 5`
    c_red=`tput setaf 1`
    c_bg_red=`tput setab 1`
    c_white=`tput setaf 7`
    c_bg_white=`tput setab 7`
    c_green=`tput setaf 2`
    c_bg_green=`tput setab 2`
    c_yellow=`tput setaf 3`
    c_bg_yellow=`tput setab 3`
    c_blue=`tput setaf 4`
    c_bg_blue=`tput setab 4`
    c_end=`tput sgr0`
}

colour_maven() {
    if [[ ! -x $MAVEN ]]; then
        echo "Cannot find Maven at $MAVEN"
        return 1
    fi

    # pick color type
    if [ $TERM = 'xterm' -o $TERM = 'xterm-color' -o $TERM = 'xterm-256color' ]; then
        xterm_color
    else
        echo "${c_red}WARNING:::Terminal '${TERM}' is not supported at this time. Colourised output will not happen for Maven${c_end}"
    fi

    error=${c_bold}${c_red}
    info=${c_end}
    warn=${c_yellow}
    success=${c_green}
    projectname=${c_bold}${c_cyan}
    skipped=${c_white}
    downloading=${c_magenta}

    $MAVEN $* | sed -e "s/\(\[INFO\]\) Building\( .*\)/${info}\1${projectname}\2${c_end}/g" \
        -e "s/\(Time elapsed: \)\([0-9]+[.]*[0-9]*.sec\)/${c_cyan}\1${c_white}\2${c_end}/g" \
        -e "s/\(Downloading: .*\)/${downloading}\1${c_end}/g" \
        -e "s/BUILD FAILURE/${error}BUILD FAILURE${c_end}/g" \
        -e "s/WARNING: \([a-zA-Z0-9.-/\\ :]+\)/${warn}WARNING: \1${c_end}/g" \
        -e "s/SEVERE: \(.+\)/${c_white}${c_bg_red}SEVERE: \1${c_end}/g" \
        -e "s/Caused by: \(.+\)/${c_white}${c_bg_green}Caused by: \1${c_end}/g" \
        -e "s/Running \(.+\)/${c_green}Running \1${c_end}/g" \
        -e "s/FAILURE \(\[[0-9]+.[:0-9]+s\]\)/${error}FAILURE \1${c_end}/g" \
        -e "s/SUCCESS \(\[[0-9]+.[:0-9]+s\]\)/${success}SUCCESS \1${c_end}/g" \
        -e "s/\(\[INFO.*\)/${info}\1${c_end}/g" \
        -e "s/INFO: \(.+\)/${c_white}INFO: \1${c_end}/g" \
        -e "s/\(\[WARN.*\)/${warn}\1${c_end}/g" \
        -e "s/\(\[ERROR.*\)/${error}\1${c_end}/g" \
        -e "s/\(<<< FAILURE!\)/${error}\1${c_end}/g" \
        -e "s/Tests run: \([0-9]*\), Failures: \([0-9]*\), Errors: \([0-9]*\), Skipped: \([0-9]*\)/${c_green}Tests run: \1 ${c_end}, Failures: ${warn}\2 ${c_end}, Errors: ${error}\3 ${c_end}, Skipped:  ${skipped}\4 ${c_end}/g"
    return ${pipestatus[1]}
}
